@import 'vars/global';
@import 'vars/colors';

.row-reverse,
.column-reverse,
.flex-row,
.flex-column {
    -js-display: flex;
    display:flex;
    flex-wrap: wrap;
    justify-content:space-between;
}

.flex-row{ flex-direction: row; }
.row-reverse { flex-direction: row-reverse; }
.flex-column  { flex-direction: column; }
.column-reverse { flex-direction: column-reverse; }

.wrap { flex-wrap: wrap; }
.nowrap { flex-wrap: nowrap; }
.wrap-reverse { flex-wrap: wrap-reverse; }

.justify-start{ justify-content: flex-start; }
.justify-end{ justify-content: flex-end; }
.justify-center{ justify-content: center; }
.justify-between{ justify-content: space-between; }
.justify-around{ justify-content: space-around; }

.content-start{ align-content: flex-start; }
.content-end{ align-content: flex-end; }
.content-center{ align-content: center; }
.content-baseline{ align-content: baseline; }
.content-end{ align-content: stretch; }

.items-start{ align-items: flex-start; }
.items-end{ align-items: flex-end; }
.items-center{ align-items: center; }
.items-baseline{ align-items: baseline; }
.items-stretch{ align-items: stretch; }

$order: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20;
@each $current-order in $order {
    $i: index($order, $current-order);
    .order-#{$i} { 
        order: $current-order;
    }
}
 .order-999{ 
	order: 999;
}



.flexwork_spacer:empty { height: 0; border: 0; width: 100%!important; }

/* Set up for row-at-* and column-at ----------- */
$size: 100 125 150 175 200 225 250 275 300 320 325 350 360 375 390 400 425 450 475 480 500 525 550 575 600 625 640 650 675 700 725 736 750 768 775 800 825 850 875 900 925 950 960 975 1000 1024 1050 1075 1100 1125 1150 1175 1200 1225 1250 1275 1280 1300 1325 1350 1366 1375 1400 1425 1440 1450;
@each $current-size in $size {
    @media only screen and (max-width : #{$current-size}px) {
        .row-at-#{$current-size}{ flex-direction: row; }
        .row-reverse-at-#{$current-size} { flex-direction: row-reverse; }
        .column-at-#{$current-size}  { flex-direction: column; }
        .column-reverse-at-#{$current-size} { flex-direction: column-reverse; }
		.hide-below-#{$current-size} { display:none !important; }
    }  
}




.grid-part{
    padding:5px;
    box-sizing: border-box;
}

.full-width{
	width: 100%;
}

$size: 33.3333333% 66.6666666% 100%;
@each $current-size in $size {
    $i: index($size, $current-size);
    .thirds-#{$i} { 
        width: $current-size;
    }
}

$size: 25% 50% 75% 100%;
@each $current-size in $size {
    $i: index($size, $current-size);
    .fourths-#{$i} { 
        width: $current-size;
    }
}
$size: 20% 40% 60% 80% 100%;
@each $current-size in $size {
    $i: index($size, $current-size);
    .fifths-#{$i} { 
        width: $current-size;
    }
}
$size: 16.6666666% 33.3333333% 50% 66.6666666% 83.3333333% 100%;
@each $current-size in $size {
    $i: index($size, $current-size);
    .sixths-#{$i} { 
        width: $current-size;
    }
}

$size: 12.5% 25% 37.5% 50% 62.5% 75% 87.5% 100%;
@each $current-size in $size {
    $i: index($size, $current-size);
    .eigths-#{$i} { 
        width: $current-size;
    }
}

$size: 11.1111111% 22.2222222% 33.3333333% 44.4444444% 55.5555555% 66.6666666% 77.7777777% 88.8888888% 100%;
@each $current-size in $size {
    $i: index($size, $current-size);
    .ninths-#{$i} { 
        width: $current-size;
    }
}


$size: 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%;
@each $current-size in $size {
    $i: index($size, $current-size);
    .tenths-#{$i} { 
        width: $current-size;
    }
}

$size: 8.3333333% 16.6666666% 25% 33.3333333% 41.6666666% 50% 58.3333333% 66.6666666% 75% 83.3333333% 91.6666666% 100%;
@each $current-size in $size {
    $i: index($size, $current-size);
    .twelfths-#{$i} { 
        width: $current-size;
    }
}

$size: 100 125 150 175 200 225 250 275 300 320 325 350 360 375 390 400 425 450 475 480 500 525 550 575 600 625 640 650 675 700 725 736 750 768 775 800 825 850 875 900 925 950 960 975 1000 1024 1050 1075 1100 1125 1150 1175 1200 1225 1250 1275 1280 1300 1325 1350 1366 1375 1400 1425 1440 1450;
@each $current-size in $size {
    @media only screen and (max-width : #{$current-size}px) {
        .full-width-at-#{$current-size}{ width: 100%; }
    }  
}

